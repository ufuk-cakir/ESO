{
  "algorithm": {
    "max_generations": {
      "value": 100,
      "description": "The maximum number of generations for the genetic algorithm.",
      "type": "int"
    }
  },
  "genetic_operator": {
    "mutation_rate": {
      "value": 0.1,
      "description": "Mutation rate in the genetic algorithm.",
      "type": "float"
    },
    "crossover_rate": {
      "value": 0.8,
      "description": "Crossover rate in the genetic algorithm.",
      "type": "float"
    },
    "reproduction_rate": {
      "value": 0.1,
      "description": "Reproduction rate in the genetic algorithm.",
      "type": "float"
    }
  },
  "selection_operator": {
    "tournament_size": {
      "value": 10,
      "description": "The size of the tournament in the selection operator.",
      "type": "int"
    }
  },
  "data": {
    "force_recreate_dataset": {
      "value": false,
      "description": "Flag to force dataset recreation.",
      "type": "bool"
    },
    "keep_in_memory": {
      "value": false,
      "description": "Flag to keep the dataset in memory.",
      "type": "bool"
    },
    "reshuffle": {
      "value": false,
      "description": "Wheter or not to reshuffle the datafiles used for training/testing/validating.",
      "type": "bool"
    },
    "species_folder": {
      "value": "",
      "description": "Folder path for species data.",
      "type": "str"
    },
    "train_size": {
      "value": 0.7,
      "description": "Proportion of data used for training.",
      "type": "float"
    },
    "test_size": {
      "value": 0.2,
      "description": "Proportion of data used for testing. Validation size will be the rest.",
      "type": "float"
    },
    "positive_class": {
      "value": "gibbon",
      "description": "Label for the positive class.",
      "type": "str"
    },
    "negative_class": {
      "value": "no-gibbon",
      "description": "Label for the negative class.",
      "type": "str"
    }
  },
  "preprocessing": {
    "lowpass_cutoff": {
      "value": 2000,
      "description": "Lowpass cutoff frequency for audio preprocessing.",
      "type": "int"
    },
    "downsample_rate": {
      "value": 4800,
      "description": "Audio downsampling rate.",
      "type": "int"
    },
    "nyquist_rate": {
      "value": 2400,
      "description": "Nyquist rate for audio processing.",
      "type": "int"
    },
    "segment_duration": {
      "value": 4,
      "description": "Duration of audio segments.",
      "type": "int"
    },
    "nb_negative_class": {
      "value": 20,
      "description": "Number of negative class samples.",
      "type": "int"
    },
    "file_type": {
      "value": "svl",
      "description": "File type for audio data.",
      "type": "str"
    },
    "audio_extension": {
      "value": ".wav",
      "description": "Audio file extension.",
      "type": "str"
    },
    "n_fft": {
      "value": 1024,
      "description": "Number of FFT points for audio processing.",
      "type": "int"
    },
    "hop_length": {
      "value": 256,
      "description": "Hop length for audio processing.",
      "type": "int"
    },
    "n_mels": {
      "value": 128,
      "description": "Number of Mel frequency bands.",
      "type": "int"
    },
    "f_min": {
      "value": 4000,
      "description": "Minimum frequency for Mel spectrogram.",
      "type": "int"
    },
    "f_max": {
      "value": 9000,
      "description": "Maximum frequency for Mel spectrogram.",
      "type": "int"
    }
  },
  "population": {
    "pop_size": {
      "value": 10,
      "description": "Size of the population in the genetic algorithm.",
      "type": "int"
    }
  },
  "gene": {
    "min_position": {
      "value": 0,
      "description": "Minimum position value for genes.",
      "type": "int"
    },
    "max_position": {
      "value": -1,
      "description": "Maximum position value for genes.",
      "type": "int"
    },
    "min_height": {
      "value": 1,
      "description": "Minimum height value for genes.",
      "type": "int"
    },
    "max_height": {
      "value": 10,
      "description": "Maximum height value for genes.",
      "type": "int"
    }
  },
  "chromosome": {
    "num_genes": {
      "value": 10,
      "description": "Number of genes in a chromosome.",
      "type": "int"
    },
    "min_num_genes": {
      "value": -1,
      "description": "Minimum number of genes in a chromosome.",
      "type": "int"
    },
    "max_num_genes": {
      "value": -1,
      "description": "Maximum number of genes in a chromosome.",
      "type": "int"
    },
    "lambda_1": {
      "value": 0.5,
      "description": "Lambda 1 parameter for the genetic algorithm.",
      "type": "float"
    },
    "lambda_2": {
      "value": 0.5,
      "description": "Lambda 2 parameter for the genetic algorithm.",
      "type": "float"
    }
  },
  "model": {
    "optimizer_name": {
      "value": "adam",
      "description": "Name of the optimizer used for training the model.",
      "type": "str"
    },
    "loss_function_name": {
      "value": "cross_entropy",
      "description": "Name of the loss function used for training the model.",
      "type": "str"
    },
    "num_epochs": {
      "value": 1,
      "description": "Number of training epochs for the model.",
      "type": "int"
    },
    "batch_size": {
      "value": 128,
      "description": "Batch size used during training.",
      "type": "int"
    },
    "learning_rate": {
      "value": 0.001,
      "description": "Learning rate used for training the model.",
      "type": "float"
    },
    "shuffle": {
      "value": true,
      "description": "Flag indicating whether to shuffle data during training.",
      "type": "bool"
    },
    "metric": {
      "value": "f1",
      "description": "Metric used to evaluate model performance. Currently supported f1 and accuracy.",
      "type": "str"
    }
  }
}
